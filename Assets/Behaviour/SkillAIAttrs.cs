// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections.Generic;

public class SkillAIAttrs
{
	public class Row
	{
		public string RECORD_ID;
		public string TRIGGER_DIS_MIN;
		public string TRIGGER_DIS_MAX;
		public string TRIGGER_HEIGHT;
	}
    
	public static List<Row> rowList = new List<Row>();
	static bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public static void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
            Row row = new Row
            {
                RECORD_ID = grid[i][0],
                TRIGGER_DIS_MIN = grid[i][1],
                TRIGGER_DIS_MAX = grid[i][2],
                TRIGGER_HEIGHT = grid[i][3]
            };
            rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public static Row Find_RECORD_ID(string find)
	{
		return rowList.Find(x => x.RECORD_ID == find);
	}
	public static List<Row> FindAll_RECORD_ID(string find)
	{
		return rowList.FindAll(x => x.RECORD_ID == find);
	}
	public Row Find_TRIGGER_DIS_MIN(string find)
	{
		return rowList.Find(x => x.TRIGGER_DIS_MIN == find);
	}
	public List<Row> FindAll_TRIGGER_DIS_MIN(string find)
	{
		return rowList.FindAll(x => x.TRIGGER_DIS_MIN == find);
	}
	public Row Find_TRIGGER_DIS_MAX(string find)
	{
		return rowList.Find(x => x.TRIGGER_DIS_MAX == find);
	}
	public List<Row> FindAll_TRIGGER_DIS_MAX(string find)
	{
		return rowList.FindAll(x => x.TRIGGER_DIS_MAX == find);
	}
	public Row Find_TRIGGER_HEIGHT(string find)
	{
		return rowList.Find(x => x.TRIGGER_HEIGHT == find);
	}
	public List<Row> FindAll_TRIGGER_HEIGHT(string find)
	{
		return rowList.FindAll(x => x.TRIGGER_HEIGHT == find);
	}
}