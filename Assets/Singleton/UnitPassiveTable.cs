// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections.Generic;
using Cysharp.Threading.Tasks;
using Skill;

public class UnitPassiveTable
{
	public class Row
	{
		public string UNIT_RECORD_ID;
		public string SKILL_RECORD_ID;
	}

	private static readonly List<Row> rowList = new List<Row>();
	
	public static async UniTask Load()
	{
		var csv = await AddressablesLogic.LoadT<TextAsset>("Config/" + CommonSetting.PassiveSKillFile);
		Load(csv);
	}

	public static string GetUnitPassiveRecordId(string unit_record_id)
	{
		var row = Find_UNIT_RECORD_ID(unit_record_id);
		return row?.SKILL_RECORD_ID;
	}

	public static List<string> GetPassiveSKillRecordIds()
	{
		var returnValue = new List<string>();
		foreach (var row in rowList)
		{
			if (SkillConfigTable.GetSkillConfigByRecordId(row.SKILL_RECORD_ID) != null)
			{
				returnValue.Add(row.SKILL_RECORD_ID);
			}
		}
		return returnValue;
	}

	static void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.UNIT_RECORD_ID = grid[i][0];
			row.SKILL_RECORD_ID = grid[i][1];

			rowList.Add(row);
		}
	}
	
	static Row Find_UNIT_RECORD_ID(string find)
	{
		return rowList.Find(x => x.UNIT_RECORD_ID == find);
	}
	public List<Row> FindAll_UNIT_RECORD_ID(string find)
	{
		return rowList.FindAll(x => x.UNIT_RECORD_ID == find);
	}
	public Row Find_SKILL_RECORD_ID(string find)
	{
		return rowList.Find(x => x.SKILL_RECORD_ID == find);
	}
	public List<Row> FindAll_SKILL_RECORD_ID(string find)
	{
		return rowList.FindAll(x => x.SKILL_RECORD_ID == find);
	}
}