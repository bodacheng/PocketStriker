// This code automatically generated by TableCodeGen

using System;
using UnityEngine;
using System.Collections.Generic;
using Cysharp.Threading.Tasks;

public class StageModeTable
{
	public class Row
	{
		public string STAGE_ID;
		public string MODE_NUM;

	}

	readonly List<Row> rowList = new List<Row>();
	bool isLoaded = false;
	
	public async UniTask LoadStageMode()
	{
		var csv = await AddressablesLogic.LoadT<TextAsset>("Config/" + CommonSetting.StageModeFile);
		if (csv != null)
		{
			Load(csv);
		}
	}

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.STAGE_ID = grid[i][0];
			row.MODE_NUM = grid[i][1];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int GetModeById(string stageId)
	{
		var row = Find_STAGE_ID(stageId);
		if (row != null)
		{
			Int32.TryParse(row.MODE_NUM, out var returnValue);
			return returnValue;
		}
		return 0;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_STAGE_ID(string find)
	{
		return rowList.Find(x => x.STAGE_ID == find);
	}
	public List<Row> FindAll_STAGE_ID(string find)
	{
		return rowList.FindAll(x => x.STAGE_ID == find);
	}
	public Row Find_MODE_NUM(string find)
	{
		return rowList.Find(x => x.MODE_NUM == find);
	}
	public List<Row> FindAll_MODE_NUM(string find)
	{
		return rowList.FindAll(x => x.MODE_NUM == find);
	}

}